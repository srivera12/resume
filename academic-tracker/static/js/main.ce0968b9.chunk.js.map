{"version":3,"sources":["subjectContext.js","Subject.js","SubjectList.js","useInputState.js","TrackerForm.js","Tracker.js","App.js","index.js"],"names":["SubjectContext","createContext","SubjectProvider","props","initialSubjects","JSON","parse","window","localStorage","getItem","useState","subjects","setSubjects","Provider","value","addSubject","subject","decrementAssignments","id","updatedSubjects","map","assignmentsLeft","resetSubjects","location","reload","completeCelebration","hasCelebrated","children","Subject","name","useContext","celebrate","useCallback","confetti","particleCount","spread","useEffect","ListItem","ListItemText","ListItemSecondaryAction","Button","variant","onClick","SubjectList","List","assignments","uuid","useInputState","initialVal","setValue","e","target","TrackerForm","setShowAddForm","newSubject","setNewSubject","handleChange","reset","onSubmit","preventDefault","TextField","label","onChange","fullWidth","autoFocus","type","style","margin","parseInt","Typography","marginBottom","color","marginLeft","Tracker","showAddForm","incompleteSubjects","filter","setItem","stringify","length","emojisplosions","Paper","padding","height","backgroundColor","className","AppBar","position","Toolbar","marginRight","Grid","container","justifyContent","marginTop","item","xs","md","lg","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce0968b9.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const SubjectContext = createContext();\n\nexport function SubjectProvider(props) {\n  const initialSubjects = JSON.parse(window.localStorage.getItem('subjects')) || [];\n  const [subjects, setSubjects] = useState(initialSubjects);\n  const addSubject = (subject) => {\n    setSubjects([...subjects, subject]);\n  };\n  const decrementAssignments = (id) => {\n    const updatedSubjects = subjects.map((subject) =>\n      subject.id === id ? { ...subject, assignmentsLeft: subject.assignmentsLeft - 1 } : subject\n    );\n    setSubjects(updatedSubjects);\n  };\n  const resetSubjects = () => {\n    setSubjects([]);\n    window.location.reload();\n  };\n  const completeCelebration = (id) => {\n    const updatedSubjects = subjects.map((subject) =>\n      subject.id === id ? { ...subject, hasCelebrated: true } : subject\n    );\n    setSubjects(updatedSubjects);\n  };\n  return (\n    <SubjectContext.Provider value={{ subjects, addSubject, decrementAssignments, resetSubjects, completeCelebration }}>\n      {props.children}\n    </SubjectContext.Provider>\n  );\n}\n","import { Button, ListItem, ListItemSecondaryAction, ListItemText } from '@mui/material';\nimport confetti from 'canvas-confetti';\nimport React, { useCallback, useContext, useEffect } from 'react';\nimport { SubjectContext } from './subjectContext';\n\nexport function Subject({ name, id, assignmentsLeft, hasCelebrated }) {\n  const { decrementAssignments, completeCelebration } = useContext(SubjectContext);\n  const celebrate = useCallback(() => {\n    confetti({\n      particleCount: 150,\n      spread: 60,\n    });\n  }, []);\n  useEffect(() => {\n    if (assignmentsLeft === 0 && !hasCelebrated) {\n      celebrate();\n      completeCelebration(id);\n    }\n  }, [assignmentsLeft, celebrate, completeCelebration, hasCelebrated, id]);\n  return (\n    <ListItem>\n      {assignmentsLeft !== 0 ? (\n        <>\n          <ListItemText>{name}</ListItemText>\n          <ListItemSecondaryAction>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                decrementAssignments(id);\n              }}\n            >\n              {assignmentsLeft} Left!\n            </Button>\n          </ListItemSecondaryAction>\n        </>\n      ) : (\n        <ListItemText>{name} is Complete. Great job!</ListItemText>\n      )}\n    </ListItem>\n  );\n}\n","import { List } from '@mui/material';\nimport React, { useContext } from 'react';\nimport uuid from 'uuid/dist/v4';\nimport { Subject } from './Subject';\nimport { SubjectContext } from './subjectContext';\n\nexport function SubjectList() {\n  const { subjects } = useContext(SubjectContext);\n  return (\n    <List>\n      {subjects.map((subject) => (\n        <Subject\n          key={uuid()}\n          name={subject.name}\n          id={subject.id}\n          assignments={subject.assignments}\n          assignmentsLeft={subject.assignmentsLeft}\n          hasCelebrated={subject.hasCelebrated}\n        />\n      ))}\n    </List>\n  );\n}\n","import { useState } from 'react';\n\nconst useInputState = (initialVal) => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue('');\n  };\n  return [value, handleChange, reset];\n};\n\nexport default useInputState;\n","import { Button, TextField, Typography } from '@mui/material';\nimport React, { useContext, useState } from 'react';\nimport uuid from 'uuid/dist/v4';\nimport { SubjectContext } from './subjectContext';\nimport useInputState from './useInputState';\n\nexport function TrackerForm({ setShowAddForm }) {\n  const { addSubject } = useContext(SubjectContext);\n  const [newSubject, setNewSubject] = useState({});\n  const [value, handleChange, reset] = useInputState('');\n  const subjectNameSubmit = (e) => {\n    e.preventDefault();\n    setNewSubject({ ...newSubject, name: value, id: uuid() });\n    reset();\n  };\n  const subjectAssignmentsSubmit = (e) => {\n    e.preventDefault();\n    setNewSubject({\n      ...newSubject,\n      assignments: parseInt(value),\n      assignmentsLeft: parseInt(value),\n      hasCelebrated: false,\n    });\n    reset();\n  };\n  const addFullClass = () => {\n    addSubject(newSubject);\n    setShowAddForm(false);\n  };\n  return (\n    <>\n      {!newSubject.name ? (\n        <form onSubmit={subjectNameSubmit}>\n          <TextField label=\"Class Name\" value={value} onChange={handleChange} fullWidth autoFocus />\n          <Button type=\"submit\" variant=\"contained\" style={{ margin: '10px' }}>\n            Add Class\n          </Button>\n        </form>\n      ) : null}\n      {newSubject.name && !newSubject.assignments ? (\n        <form onSubmit={subjectAssignmentsSubmit}>\n          <TextField\n            label={`Number of Assignments for ${newSubject.name}`}\n            value={value}\n            onChange={handleChange}\n            fullWidth\n            autoFocus\n          />\n          <Button type=\"submit\" variant=\"contained\" style={{ margin: '10px' }}>\n            Add Assignments\n          </Button>\n        </form>\n      ) : null}\n      {newSubject.name && newSubject.assignments ? (\n        <>\n          <Typography style={{ marginBottom: '10px' }}>\n            Add a class named {newSubject.name} with {newSubject.assignments} assignments?\n          </Typography>\n          <Button onClick={addFullClass} variant=\"contained\" color=\"secondary\">\n            Finish Adding Class\n          </Button>\n          <Button\n            onClick={() => {\n              setNewSubject({});\n            }}\n            variant=\"contained\"\n            color=\"error\"\n            style={{ marginLeft: '10px' }}\n          >\n            No, Cancel\n          </Button>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { AppBar, Button, Grid, Paper, Toolbar, Typography } from '@mui/material';\nimport { emojisplosions } from 'emojisplosion';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { SubjectContext } from './subjectContext';\nimport { SubjectList } from './SubjectList';\nimport { TrackerForm } from './TrackerForm';\n\nexport function Tracker(props) {\n  const { subjects, resetSubjects } = useContext(SubjectContext);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const incompleteSubjects = subjects.filter((subject) => subject.assignmentsLeft !== 0);\n  useEffect(() => {\n    window.localStorage.setItem('subjects', JSON.stringify(subjects));\n    if (subjects.length !== 0 && incompleteSubjects.length === 0) {\n      emojisplosions();\n    }\n  }, [subjects, incompleteSubjects.length]);\n  return (\n    <>\n      <Paper\n        style={{\n          padding: 0,\n          margin: 0,\n          height: '100vh',\n          backgroundColor: '#fff',\n        }}\n        className=\"TodoApp\"\n      >\n        <AppBar color=\"secondary\" position=\"static\" style={{ height: '64px' }}>\n          <Toolbar>\n            <Typography color=\"inherit\">Academic Tracker</Typography>\n            <Button\n              onClick={resetSubjects}\n              variant=\"contained\"\n              color=\"error\"\n              style={{ marginRight: '10px', marginLeft: 'auto' }}\n            >\n              RESET\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Grid container justifyContent=\"center\" style={{ marginTop: '1rem' }}>\n          <Grid item xs={11} md={8} lg={6}>\n            {subjects.length === 0 ? (\n              <Typography variant=\"h4\">Use the button below to start adding classes. Have a great week!</Typography>\n            ) : null}\n            {subjects.length !== 0 && incompleteSubjects.length === 0 ? (\n              <Typography variant=\"h3\">YOU FINISHED EVERYTHING FOR THIS WEEK! FANTASTIC JOB!</Typography>\n            ) : (\n              <SubjectList />\n            )}\n            {showAddForm ? (\n              <TrackerForm setShowAddForm={setShowAddForm} />\n            ) : (\n              <Button\n                onClick={() => {\n                  setShowAddForm(true);\n                }}\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginTop: '2rem' }}\n                disabled={subjects.length !== 0 && incompleteSubjects.length === 0}\n              >\n                Add A Class!!\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","import { SubjectProvider } from './subjectContext';\nimport { Tracker } from './Tracker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SubjectProvider>\n        <Tracker />\n      </SubjectProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}